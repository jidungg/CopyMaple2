#pragma once

#include <process.h>


namespace Client
{
	const unsigned int g_iWinSizeX = { 1280 };
	const unsigned int g_iWinSizeY = { 720 };

	enum LEVELID { LEVEL_LOADING, LEVEL_LOGO, LEVEL_GAMEPLAY, LEVEL_HOME, LAST };
	enum class TERRAIN_OBJ_TYPE { BLOCK, FILED, PORTAL, SPAWN, LAST };
	enum class DIRECTION { XM, ZM, XP, ZP, XMZP, XPZP, XMZM, XPZM, YP,YM,LAST };
	enum class EVENT_ID { CREATE_OBJ, DEAD_OBJ, LEVEL_CHANGE, LAST };
#define DIR_WS DIRECTION::XM
#define DIR_EN DIRECTION::XP
#define DIR_WN DIRECTION::ZP
#define DIR_ES DIRECTION::ZM
#define DIR_W DIRECTION::XMZP
#define DIR_E DIRECTION::XPZM
#define DIR_N DIRECTION::XPZP
#define DIR_S DIRECTION::XMZM
#define DIR_D DIRECTION::YM
#define DIR_U DIRECTION::YP
	
	enum class ITEM_TYPE { 
		EQUIP = 0, 
		CONSUMABLE = 1, 
		BUILD = 2, 
		ETC = 3, 
		LAST = 4 };

	enum class ITEM_ID
	{
		//건설
		GRASS_A0 = (int)ITEM_TYPE::BUILD * 100,
		ROCK_A0,

		LAST
	};
	enum class EQUIP_TYPE
	{
		WEAPON ,
		HAT ,
		ROBE,
		NECKLACE,
		LAST
	};
	typedef struct UIListItemData
	{

	}UIITEMDATA;

	enum class SKILL_TYPE
	{
		INSTANT,
		PASSIVE,
		CHANNELING,
		CHARGING,
		CASTING,
		LAST
	};
	enum class SKILL_ID
	{
		BASIC_ATTACK,
		MAGIC_CLAW,
		FLAME_WAVE,
		FIRE_TORNADO,
		KINDLING,
		KINDLING2,
		BBQ_PARTY,
		FAKE_METEOR,
		FLAME_BURST,
		WILD_FIRE,
		LAST
	};
	enum class SKILL_COST_TYPE
	{
		NONE,
		SP,
		STAMINA,
		LAST
	};
	NLOHMANN_JSON_SERIALIZE_ENUM(SKILL_COST_TYPE, {
		{SKILL_COST_TYPE::NONE, "NONE"},
		{SKILL_COST_TYPE::SP, "SP"},
		{SKILL_COST_TYPE::STAMINA, "STAMINA"},
		{SKILL_COST_TYPE::LAST, "LAST"}
	});

	NLOHMANN_JSON_SERIALIZE_ENUM(SKILL_TYPE, { 
		{SKILL_TYPE::INSTANT, "INSTANT"},
		{SKILL_TYPE::PASSIVE, "PASSIVE"},
		{SKILL_TYPE::CHANNELING, "CHANNELING"},
		{SKILL_TYPE::CHARGING, "CHARGING"},
		{SKILL_TYPE::CASTING, "CASTING"},
		{SKILL_TYPE::LAST, "LAST"}
	});
	NLOHMANN_JSON_SERIALIZE_ENUM(SKILL_ID, {
		{SKILL_ID::BASIC_ATTACK, "BASIC_ATTACK"},
		{SKILL_ID::MAGIC_CLAW, "MAGIC_CLAW"},
		{SKILL_ID::FLAME_WAVE, "FLAME_WAVE"},
		{SKILL_ID::FIRE_TORNADO, "FIRE_TORNADO"},
		{SKILL_ID::KINDLING, "KINDLING"},
		{SKILL_ID::KINDLING2, "KINDLING2"},
		{SKILL_ID::BBQ_PARTY, "BBQ_PARTY"},
		{SKILL_ID::FAKE_METEOR, "FAKE_METEOR"},
		{SKILL_ID::FLAME_BURST, "FLAME_BURST"},
		{SKILL_ID::WILD_FIRE, "WILD_FIRE"},
		{SKILL_ID::LAST, "LAST"}
	});
}

extern HINSTANCE g_hInst;
extern HWND g_hWnd;

using namespace Client;
