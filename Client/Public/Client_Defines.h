#pragma once

#include <process.h>


namespace Client
{
	const unsigned int g_iWinSizeX = { 1280 };
	const unsigned int g_iWinSizeY = { 720 };


	enum LEVELID { LEVEL_LOADING, LEVEL_LOGO, LEVEL_GAMEPLAY, LEVEL_HOME, LAST };
	enum LAYERID { LAYER_TERRAIN, LAYER_PLAYER, LAYER_BULLET,LAYER_MONSTER,LAYER_INTERACTION, LAYER_UI, LAYER_CAMERA,LAYER_LAST };;
	enum class TEAM { PLAYER, MONSTER, LAST };
	enum class DIRECTION { XM, ZM, XP, ZP, XMZP, XPZP, XMZM, XPZM, YP,YM,LAST };
	enum class EVENT_ID { CREATE_OBJ, DEAD_OBJ, LEVEL_CHANGE, LAST };
#define DIR_WS DIRECTION::XM
#define DIR_EN DIRECTION::XP
#define DIR_WN DIRECTION::ZP
#define DIR_ES DIRECTION::ZM
#define DIR_W DIRECTION::XMZP
#define DIR_E DIRECTION::XPZM
#define DIR_N DIRECTION::XPZP
#define DIR_S DIRECTION::XMZM
#define DIR_D DIRECTION::YM
#define DIR_U DIRECTION::YP

	enum class ITEM_TYPE { 
		EQUIP , 
		DECO,
		CONSUMABLE , 
		BUILD , 
		ETC , 
		LAST 
	};

	NLOHMANN_JSON_SERIALIZE_ENUM(ITEM_TYPE, {
	{ITEM_TYPE::EQUIP, "EQUIP"},
	{ITEM_TYPE::DECO, "DECO"},
	{ITEM_TYPE::CONSUMABLE, "CONSUMABLE"},
	{ITEM_TYPE::BUILD, "BUILD"},
	{ITEM_TYPE::ETC, "ETC"},
	{ITEM_TYPE::LAST, "LAST"}
	});
	enum class ITEM_GRADE
	{
		NORMAL,
		ELITE,
		EXCELENT,
		LEGENDARY,
		MYTHIC,
		LAST
	};
	NLOHMANN_JSON_SERIALIZE_ENUM(ITEM_GRADE, {
		{ITEM_GRADE::NORMAL, "NORMAL"},
		{ITEM_GRADE::ELITE, "ELITE"},
		{ITEM_GRADE::EXCELENT, "EXCELENT"},
		{ITEM_GRADE::LEGENDARY, "LEGENDARY"},
		{ITEM_GRADE::MYTHIC, "MYTHIC"},
		{ITEM_GRADE::LAST, "LAST"}
		});
#pragma region BUILD_ITEM

	enum class BUILD_ITEM_TYPE
	{
		CUBE,
		FILED_BLOCK,
		FILED_NON_BLOCK,
		INTERACTABLE,
		SPAWN,
		LAST
	};
	NLOHMANN_JSON_SERIALIZE_ENUM(BUILD_ITEM_TYPE, {
		{BUILD_ITEM_TYPE::CUBE, "CUBE"},
		{BUILD_ITEM_TYPE::FILED_BLOCK, "FILED_BLOCK"},
		{BUILD_ITEM_TYPE::FILED_NON_BLOCK, "FILED_NON_BLOCK"},
		{BUILD_ITEM_TYPE::INTERACTABLE, "INTERACTABLE"},
		{BUILD_ITEM_TYPE::SPAWN, "SPAWN"},
		{BUILD_ITEM_TYPE::LAST, "LAST"}
		});
	enum class BUILD_ITEM_ID
	{
		GRASS_1,
		ROCK_1,
		BUSH_1,
		FLOWER_1,
		TREE_1,
		HOUSE_1,
		MONSTER_SPAWNER,
		PLAYER_SPAWNER,
		PORTAL,
		LAST
	};
	NLOHMANN_JSON_SERIALIZE_ENUM(BUILD_ITEM_ID, {
		{BUILD_ITEM_ID::GRASS_1, "GRASS_1"},
		{BUILD_ITEM_ID::ROCK_1, "ROCK_1"},
		{BUILD_ITEM_ID::BUSH_1, "BUSH_1"},
		{BUILD_ITEM_ID::FLOWER_1, "FLOWER_1"},
		{BUILD_ITEM_ID::TREE_1, "TREE_1"},
		{BUILD_ITEM_ID::HOUSE_1, "HOUSE_1"},
		{BUILD_ITEM_ID::MONSTER_SPAWNER, "MONSTER_SPAWNER"},
		{BUILD_ITEM_ID::PLAYER_SPAWNER, "PLAYER_SPAWNER"},
		{BUILD_ITEM_ID::PORTAL, "PORTAL"},
		{BUILD_ITEM_ID::LAST, "LAST"}
		});
#pragma endregion
#pragma region EQUIP

	enum class EQUIP_ITEM_TYPE
	{
		HAT,
		TOP,
		BOTTOM,
		SUIT,
		GLOVES,
		SHOES,
		CAPE,
		WEAPON,
		EAR,

		LAST
	};
	NLOHMANN_JSON_SERIALIZE_ENUM(EQUIP_ITEM_TYPE, {
	{EQUIP_ITEM_TYPE::HAT, "HAT"},
	{EQUIP_ITEM_TYPE::TOP, "TOP"},
	{EQUIP_ITEM_TYPE::BOTTOM, "BOTTOM"},
	{EQUIP_ITEM_TYPE::SUIT, "SUIT"},
	{EQUIP_ITEM_TYPE::GLOVES, "GLOVES"},
	{EQUIP_ITEM_TYPE::SHOES, "SHOES"},
	{EQUIP_ITEM_TYPE::CAPE, "CAPE"},
	{EQUIP_ITEM_TYPE::WEAPON, "WEAPON"},
	{EQUIP_ITEM_TYPE::EAR, "EAR"},
	{EQUIP_ITEM_TYPE::LAST, "LAST"}
		});
	enum class EQUIP_ITEM_ID
	{
		BASIC_SHOES,
		BASIC_SUIT,
		BASIC_HAT,
		BASIC_STAFF,
		EVILWINGS,

		FIREPRISM_CAPE,
		FIREPRISM_EAR,
		FIREPRISM_SHOES,
		FIREPRISM_GLOVE,
		FIREPRISM_TOP,
		FIREPRISM_BOTTOM,
		FIREPRISM_HAT,
		FIREPRISM_STAFF,
		LAST
	};

	NLOHMANN_JSON_SERIALIZE_ENUM(EQUIP_ITEM_ID, {
	{EQUIP_ITEM_ID::BASIC_SHOES, "BASIC_SHOEdS"},
	{EQUIP_ITEM_ID::BASIC_SUIT, "BASIC_SUIT"},
	{EQUIP_ITEM_ID::BASIC_HAT, "BASIC_HAT"},
	{EQUIP_ITEM_ID::BASIC_STAFF, "BASIC_STAFF"},
	{EQUIP_ITEM_ID::EVILWINGS, "EVILWINGS"},
	{EQUIP_ITEM_ID::FIREPRISM_CAPE, "FIREPRISM_CAPE"},
	{EQUIP_ITEM_ID::FIREPRISM_EAR, "FIREPRISM_EAR"},
	{EQUIP_ITEM_ID::FIREPRISM_SHOES, "FIREPRISM_SHOES"},
	{EQUIP_ITEM_ID::FIREPRISM_GLOVE, "FIREPRISM_GLOVE"},
	{EQUIP_ITEM_ID::FIREPRISM_TOP, "FIREPRISM_TOP"},
	{EQUIP_ITEM_ID::FIREPRISM_BOTTOM, "FIREPRISM_BOTTOM"},
	{EQUIP_ITEM_ID::FIREPRISM_HAT, "FIREPRISM_HAT"},
	{EQUIP_ITEM_ID::FIREPRISM_STAFF, "FIREPRISM_STAFF"},
	{EQUIP_ITEM_ID::LAST, "LAST"}
		});

	enum class DECO_TYPE
	{
		FACE,
		LAST
	};
	NLOHMANN_JSON_SERIALIZE_ENUM(DECO_TYPE, {
		{DECO_TYPE::FACE, "FACEDECO"},
		{DECO_TYPE::LAST, "LAST"}
		});
	enum class CUSTOMIZE_PART
	{
		HAIR,
		FACE,
		SKIN,
		LAST
	};
	NLOHMANN_JSON_SERIALIZE_ENUM(CUSTOMIZE_PART, {
		{CUSTOMIZE_PART::HAIR, "HAIR"},
		{CUSTOMIZE_PART::FACE, "FACE"},
		{CUSTOMIZE_PART::SKIN, "SKIN"},
		{CUSTOMIZE_PART::LAST, "LAST"}
		});

#pragma endregion

	typedef struct UIListItemData
	{

	}UIITEMDATA;

	enum class SKILL_CASTING_TYPE
	{
		INSTANT,
		PASSIVE,
		CHANNELING,
		CHARGING,
		CASTING,
		LAST
	};
	NLOHMANN_JSON_SERIALIZE_ENUM(SKILL_CASTING_TYPE, {
		{SKILL_CASTING_TYPE::INSTANT, "INSTANT"},
		{SKILL_CASTING_TYPE::PASSIVE, "PASSIVE"},
		{SKILL_CASTING_TYPE::CHANNELING, "CHANNELING"},
		{SKILL_CASTING_TYPE::CHARGING, "CHARGING"},
		{SKILL_CASTING_TYPE::CASTING, "CASTING"},
		{SKILL_CASTING_TYPE::LAST, "LAST"}
	});
	enum class SKILL_TARGET_TYPE
	{
		SELF,
		ENEMY,
		ALLY,
		LAST
	};
	NLOHMANN_JSON_SERIALIZE_ENUM(SKILL_TARGET_TYPE, {
		{SKILL_TARGET_TYPE::SELF, "SELF"},
		{SKILL_TARGET_TYPE::ENEMY, "ENEMY"},
		{SKILL_TARGET_TYPE::ALLY, "ALLY"},
		{SKILL_TARGET_TYPE::LAST, "LAST"}
		});
	enum class SKILL_RANGE_TYPE
	{
		MELEE,
		SINGLE,
		FRUSTUM,
		SPHERE,
		CYLINDER,
		LAST
	};
	NLOHMANN_JSON_SERIALIZE_ENUM(SKILL_RANGE_TYPE, {
		{SKILL_RANGE_TYPE::SINGLE, "SINGLE"},
		{SKILL_RANGE_TYPE::AREA, "AREA"},
		{SKILL_RANGE_TYPE::LAST, "LAST"}
		});
	enum class SKILL_ID
	{
		BASIC_ATTACK,
		TELEPORT,
		MAGIC_CLAW,
		FLAME_WAVE,
		FIRE_TORNADO,
		KINDLING,
		KINDLING2,
		BBQ_PARTY,
		FAKE_METEOR,
		WILD_FIRE,
		WILD_FIRE2,

		SNAIL_ATTACK,
		CRAB_ATTACK,
		STUMP_CHARGE_ATTACK,
		STUMP_KICK,
		STUMP_BUNTING,
		BAYAR_ATTACK_A,
		BAYAR_ATTACK_B,
		BAYAR_ATTACK_C,
		BAYAR_ATTACK_D,
		BAYAR_ATTACK_E,
		BAYAR_ATTACK_F,
		BAYAR_ATTACK_G,
		BAYAR_ATTACK_H,

		LAST
	};
	NLOHMANN_JSON_SERIALIZE_ENUM(SKILL_ID, {
		{SKILL_ID::BASIC_ATTACK, "BASIC_ATTACK"},
		{SKILL_ID::TELEPORT, "TELEPORT"},
		{SKILL_ID::MAGIC_CLAW, "MAGIC_CLAW"},
		{SKILL_ID::FLAME_WAVE, "FLAME_WAVE"},
		{SKILL_ID::FIRE_TORNADO, "FIRE_TORNADO"},
		{SKILL_ID::KINDLING, "KINDLING"},
		{SKILL_ID::KINDLING2, "KINDLING2"},
		{SKILL_ID::BBQ_PARTY, "BBQ_PARTY"},
		{SKILL_ID::FAKE_METEOR, "FAKE_METEOR"},
		{SKILL_ID::WILD_FIRE, "WILD_FIRE"},
		{SKILL_ID::WILD_FIRE2, "WILD_FIRE2"},
		{SKILL_ID::SNAIL_ATTACK, "SNAIL_ATTACK"},
		{SKILL_ID::CRAB_ATTACK, "CRAB_ATTACK"},
		{SKILL_ID::STUMP_CHARGE_ATTACK, "STUMP_CHARGE_ATTACK"},
		{SKILL_ID::STUMP_KICK, "STUMP_KICK"},
		{SKILL_ID::STUMP_BUNTING, "STUMP_BUNTING"},
		{SKILL_ID::BAYAR_ATTACK_A, "BAYAR_ATTACK_A"},
		{SKILL_ID::BAYAR_ATTACK_B, "BAYAR_ATTACK_B"},
		{SKILL_ID::BAYAR_ATTACK_C, "BAYAR_ATTACK_C"},
		{SKILL_ID::BAYAR_ATTACK_D, "BAYAR_ATTACK_D"},
		{SKILL_ID::BAYAR_ATTACK_E, "BAYAR_ATTACK_E"},
		{SKILL_ID::BAYAR_ATTACK_F, "BAYAR_ATTACK_F"},
		{SKILL_ID::BAYAR_ATTACK_G, "BAYAR_ATTACK_G"},
		{SKILL_ID::BAYAR_ATTACK_H, "BAYAR_ATTACK_H"},
		{SKILL_ID::LAST, "LAST"}
	});
	enum class SKILL_COST_TYPE
	{
		NONE,
		SP,
		EP,
		LAST
	};

	NLOHMANN_JSON_SERIALIZE_ENUM(SKILL_COST_TYPE, {
		{SKILL_COST_TYPE::NONE, "NONE"},
		{SKILL_COST_TYPE::SP, "SP"},
		{SKILL_COST_TYPE::EP, "EP"},
		{SKILL_COST_TYPE::LAST, "LAST"}
	});
	enum class MONSTER_GRADE
	{
		NORMAL,
		ELITE,
		BOSS,
		LAST
	};
	NLOHMANN_JSON_SERIALIZE_ENUM(MONSTER_GRADE, {
		{MONSTER_GRADE::NORMAL, "NORMAL"},
		{MONSTER_GRADE::ELITE, "ELITE"},
		{MONSTER_GRADE::BOSS, "BOSS"},
		{MONSTER_GRADE::LAST, "LAST"}
		});
	enum class MONSTER_ID
	{
		SNAIL,
		CRAB,
		STUMP,
		BAYAR,
		LAST
	};
	NLOHMANN_JSON_SERIALIZE_ENUM(MONSTER_ID, {
		{MONSTER_ID::SNAIL, "SNAIL"},
		{MONSTER_ID::CRAB, "CRAB"},
		{MONSTER_ID::STUMP, "STUMP"},
		{MONSTER_ID::BAYAR, "BAYAR"},
		{MONSTER_ID::LAST, "LAST"},
	});

	enum MON_STATE
	{
		M_AS_ATTACK_IDLE = 1000,
		M_AS_BORE,
		M_AS_DAMG,
		M_AS_DEAD,
		M_AS_IDLE,
		M_AS_REGEN,
		M_AS_RUN,
		M_AS_STUN,
		M_AS_WALK,
		M_AS_JUMP,
		M_AS_LAST

		, M_BS_BORN = 2000
		, M_BS_IDLE
		, M_BS_ATTACK
		, M_BS_MOVE
		, M_BS_DAMG
		, M_BS_DEAD
		, M_BS_STUN
		, M_BS_LAST
	};	  
	NLOHMANN_JSON_SERIALIZE_ENUM(MON_STATE, {
		{MON_STATE::M_AS_ATTACK, "AS_ATTACK"},
		{MON_STATE::M_AS_ATTACK_IDLE, "AS_ATTACK_IDLE"},
		{MON_STATE::M_AS_BORE, "AS_BORE"},
		{MON_STATE::M_AS_DAMG, "AS_DAMG"},
		{MON_STATE::M_AS_DEAD, "AS_DEAD"},
		{MON_STATE::M_AS_IDLE, "AS_IDLE"},
		{MON_STATE::M_AS_REGEN, "AS_REGEN"},
		{MON_STATE::M_AS_RUN, "AS_RUN"},
		{MON_STATE::M_AS_STUN, "AS_STUN"},
		{MON_STATE::M_AS_WALK, "AS_WALK"},
		{MON_STATE::M_AS_LAST, "AS_LAST"}
		});

}

extern HINSTANCE g_hInst;
extern HWND g_hWnd;

using namespace Client;
